name: Flask CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m venv venv
        . venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    #- name: Run user tests
    #  run: |
     #   . venv/bin/activate
     #   pytest tests/user_test.py --maxfail=1 --disable-warnings -q
    
   # - name: Run post tests 
    #  run: |
    #    . venv/bin/activate
     #   pytest tests/comment_test.py --maxfail=1 --disable-warnings -q

  build-and-push:
    needs: test 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: docker build -t dogogh1/blog-backend:latest .

      - name: Push Docker image
        run: docker push dogogh1/blog-backend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH without passphrase
        uses: webfactory/ssh-agent@v0.5.3
      - name: SSH into VPN Server and Connect to Internal VMs
        run: |
          # Instalar o sshpass (caso necessário)
          sudo apt-get install -y sshpass
          
          # Conectar à VM de VPN usando o IP externo e fornecer a senha automaticamente
          sshpass -p 'teste' ssh teste@34.123.48.112 << 'EOF'
            echo "Conectado à VPN Server"
          EOF
            
            # Conectar à VM interna 1 com IP 10.0.1.3
            ssh -o StrictHostKeyChecking=no root@10.0.1.3 << 'EOF2'
              echo "Conectado à VM Interna 1"
            EOF2
          EOF
